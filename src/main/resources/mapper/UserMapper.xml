<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dcp.example.mapper.UserMapper">
	

<!--<resultMap type="org.springframework.security.core.authority.SimpleGrantedAuthority" id="AuthMap">
		<result property="authority" column="u_auth" />
	</resultMap> -->
	
<!--<resultMap type="org.springframework.security.core.authority.SimpleGrantedAuthority" id="AuthMap">		
		<constructor>
			<arg column="u_auth" javaType="String" />
		</constructor>
	</resultMap> -->
	
	<resultMap type="com.dcp.example.domain.User" id="UserMap">
		<result property="username" column="u_id" />
		<result property="uName" column="u_name" />
		<result property="uDateTime" column="u_datetime" />
		<collection property="authorities" ofType="org.springframework.security.core.authority.SimpleGrantedAuthority">
			<constructor>
				<arg column="u_auth" javaType="String" />
			</constructor>
		</collection>
	</resultMap>
	
	<select id="readUserAndAuthList" parameterType="String" resultMap="UserMap">
      SELECT        ta.u_id,               						   
	                ta.u_name,
	                ta.u_datetime,
	                tb.u_auth
      FROM         	dcp_user ta
      LEFT JOIN 	dcp_auth tb ON ta.u_id = tb.u_id
   </select>

 <!-- 권한 읽기 -->
    <select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
       SELECT         u_auth
       FROM			  dcp_auth
       WHERE          1=1
       AND            u_id = #{username}
    </select>

   <!-- 회원 불러오기 -->
   <select id="readUser" parameterType="String" resultType="User">
      SELECT         u_id                 						    as   username,
			                 u_password             					as password,
			                 u_name                						as   uName,
			                 u_isAccountNonExpired        as isAccountNonExpired,
			                 u_isAccountNonLocked    	    as isAccountNonLocked,
			                 u_isCredentialNonExpired    as isCredentialsNonExpired,
			                 u_isEnabled          				    as isEnabled
      FROM         dcp_user
      WHERE         1=1
      AND            u_id   =   #{username}
   </select>
   
   <!-- 회원 등록 -->
   <insert id="createUser" parameterType="User">
      INSERT INTO dcp_user (
         u_id,
         u_password,
         u_name,
         u_isAccountNonExpired,
         u_isAccountNonLocked,
         u_isCredentialNonExpired,
         u_isEnabled
      ) VALUES (
         #{username},
         #{password},
         #{uName},
         #{isAccountNonExpired},
         #{isAccountNonLocked},
         #{isCredentialsNonExpired},
         #{isEnabled}
      )
   </insert>   
   
    <!-- 유저 권한 추가 -->
    <insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
       INSERT INTO dcp_auth (
          u_id,
          u_auth
       ) VALUES
         <foreach item="authority" index="index" collection="authorities" separator=",">
            (#{username}, #{authority.role})
         </foreach>
         ON DUPLICATE KEY
         UPDATE
            u_id = #{username}
    </insert>
    
     <select id="readUserlist" resultType="User">
      SELECT         u_id                 		as username,
			         u_name                		as uName,
			         u_datetime					as uDateTime
      FROM         	 dcp_user
      WHERE          1=1
   </select>
   
   <delete id="deleteAdmin" parameterType="User">
      DELETE FROM    dcp_auth
      WHERE          u_id = #{username}
      AND			 u_auth = "ROLE_ADMIN"
   </delete>
   
   <insert id="addAdmin" parameterType="User">
      INSERT INTO    dcp_auth(u_id, u_auth) 	
      VALUES		 (#{username}, "ROLE_ADMIN")
   </insert>
</mapper>
